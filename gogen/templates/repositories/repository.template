/**
    Generated by: silvera
    Date: {{timestamp}}
*/
{%- set type_name = typedef|firstupper -%}
{%- set type_inst = typedef|firstlower %}
package repositories

import (
	"context"
	"{{service_name}}/models"

	"go.mongodb.org/mongo-driver/bson"
	"go.mongodb.org/mongo-driver/mongo"
)

type {{type_name}}Repository struct {
	*mongo.Collection
	context.Context
}

func New{{type_name}}Repository(database *mongo.Database) *{{type_name}}Repository {
	return &{{type_name}}Repository{
	        Collection: database.Collection("{{type_inst}}s"),
	        }
}

func ({{type_inst}}Repository *{{type_name}}Repository) Create({{type_inst}} *models.{{type_name}}) (interface{}, error) {
	response, err := {{type_inst}}Repository.Collection.InsertOne({{type_inst}}Repository.Context, {{type_inst}})
	return response, err
}

func ({{type_inst}}Repository *{{type_name}}Repository) Update({{type_inst}} *models.{{type_name}}) (interface{}, error) {
	response, err := {{type_inst}}Repository.Collection.ReplaceOne({{type_inst}}Repository.Context, bson.M{"_id": {{type_inst}}.ID}, {{type_inst}})
	return response, err
}

func ({{type_inst}}Repository *{{type_name}}Repository) Delete({{type_inst}}ID {{id_datatype|converttype}}) error {
	_, err := {{typedef|firstlower}}Repository.Collection.DeleteOne({{type_inst}}Repository.Context, bson.M{"_id": {{type_inst}}ID})
	return err
}

func ({{type_inst}}Repository *{{type_name}}Repository) GetOne({{type_inst}}ID {{id_datatype|converttype}}) (interface{}, error) {
    var result bson.M
	err := {{typedef|firstlower}}Repository.Collection.FindOne({{type_inst}}Repository.Context, bson.M{"_id": {{type_inst}}ID}).Decode(&result)
	return result, err
}

func ({{type_inst}}Repository *{{type_name}}Repository) GetAll() *[]models.{{type_name}} {
	cursor, _ := {{type_inst}}Repository.Collection.Find({{type_inst}}Repository.Context, bson.M{})
	var {{type_inst}}s []models.{{type_name}}
	_ = cursor.All({{type_inst}}Repository.Context, &{{type_inst}}s)
	return &{{type_inst}}s
}
