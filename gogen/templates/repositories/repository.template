/**
    Generated by: silvera
    Date: {{timestamp}}
*/
{%- set type_name = typedef|firstupper -%}
{%- set type_inst = typedef|firstlower %}
package repositories

import (
	"context"

	"{{service_name}}/models"
	"go.mongodb.org/mongo-driver/bson"
	"go.mongodb.org/mongo-driver/mongo"
)

type {{type_name}}Repository struct {
	collection *mongo.Collection
	ctx context.Context
}

func New{{type_name}}Repository(collection *mongo.Collection, ctx context.Context) *{{type_name}}Repository {
	return &{{type_name}}Repository{collection, ctx}
}

func ({{type_inst}}Repository *{{type_name}}Repository) Create({{type_inst}} *models.{{type_name}}) (interface{}, error) {
	response, err := {{type_inst}}Repository.collection.InsertOne({{type_inst}}Repository.ctx, {{type_inst}})
	return response, err
}

func ({{type_inst}}Repository *{{type_name}}Repository) Update({{type_inst}} *models.{{type_name}}) (interface{}, error) {
	response, err := {{type_inst}}Repository.collection.UpdateOne({{type_inst}}Repository.ctx, {{type_inst}})
	return response, err
}

func ({{type_inst}}Repository *{{type_name}}Repository) Delete({{type_inst}}ID {{id_datatype|converttype}}) error {
	_, err := {{typedef|firstlower}}Repository.collection.DeleteOne({{type_inst}}Repository.ctx, bson.M{"_id": {{type_inst}}ID})
	return err
}

func ({{type_inst}}Repository *{{type_name}}Repository) FindAll({{type_inst}} *models.{{type_name}}) *[]models.{{type_name}} {
	cursor, _ := {{type_inst}}Repository.collection.Find({{type_inst}}Repository.ctx, bson.M{})
	var {{type_inst}}s []models.{{type_name}}
	_ = cursor.All({{type_inst}}Repository.ctx, &{{type_inst}}s)
	return &{{type_inst}}s
}
