/**
  Generated by: silvera
  Date: 2022-09-20 23:08:02
*/
package services

import (
	"bookstore/models"
	"bookstore/repositories"

	"go.mongodb.org/mongo-driver/mongo"
)

type BookstoreService struct {
	*repositories.BookRepository
}

func NewBookstoreService(database *mongo.Database) *BookstoreService {
	return &BookstoreService{
            BookRepository: repositories.NewBookRepository(database),
            }
}

// Auto-generated CRUD methods
func (bookstoreService *BookstoreService) CreateBook(book *models.Book) interface{} {
	retVal,_ := bookstoreService.BookRepository.Create(book)
	return retVal
}

func (bookstoreService *BookstoreService) UpdateBook(book *models.Book) interface{} {
	retVal,_ := bookstoreService.BookRepository.Update(book)
	return retVal
}

func (bookstoreService *BookstoreService) DeleteBook(bookID string) interface{} {
	err := bookstoreService.BookRepository.Delete(bookID)
	if err != nil { panic(err) }
	return "Object with ID: " + bookID + " deleted successfully!"
}

func (bookstoreService *BookstoreService) GetBook(bookID string) interface{} {
	retVal, _ := bookstoreService.BookRepository.GetOne(bookID)
	return retVal
}





func (bookstoreService *BookstoreService) ListBooks() *[]models.Book {
	return bookstoreService.BookRepository.GetAll()
}


/*
func (bookstoreService *BookstoreService) BookExists(isbn string) bool {

            TODO: Implement this function!!!

}
*/

/*
func (bookstoreService *BookstoreService) BookPrice(isbn string) float32 {

            TODO: Implement this function!!!

}
*/
